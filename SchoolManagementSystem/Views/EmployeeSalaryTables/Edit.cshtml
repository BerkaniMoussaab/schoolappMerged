@model SchoolManagementSystem.EmployeeSalaryTable

@{
    ViewBag.Title = "Edit";
}
<div class="card mb-4 shadow">
    <div class="card-header">
        Employee Salary
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Update Salary Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.EmployeeSalaryID)
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffID, "Select Employee", htmlAttributes: new { @class = "control-label" })

                        @Html.DropDownList("StaffID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalaryDate, "Salary Date", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.SalaryDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalaryDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalaryMonth, "Salary(Month)", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.SalaryMonth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalaryMonth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalaryYear, "Salary(Year)", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.SalaryYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalaryYear, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Amount, "Salary", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comments, "Comments", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update Salary" class="btn btn-success" />
                </div>
            </div>
        </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back", "Index")
</div>
