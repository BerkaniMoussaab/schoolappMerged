@model SchoolManagementSystem.UserTable

@{
    ViewBag.Title = "User";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>مستخدم جديد</h4>
        <hr />
        <div class="row">
            <div class="col-md-4">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserTypeID, "اختر الصنف", htmlAttributes: new { @class = "control-label " })

                    @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, "اسم المستخدم", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, "الاسم الكامل", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress, "البريد الاكتروني", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, "الرمز السري", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNo, "رقم الهاتف", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
           

           
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, "العنوان", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="اضافة" class="btn btn-success" />
                @Html.ActionLink("عودة", "Save Record", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}


